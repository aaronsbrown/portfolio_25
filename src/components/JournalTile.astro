---
interface Props {
  post: any;
  index: number;
  isFirst?: boolean;
  isLast?: boolean;
}

const { post, index, isFirst, isLast } = Astro.props;
const readingTime = Math.ceil(post.body.split(' ').length / 200) || 5;

// Generate a subtle pattern based on post index for visual variety
const patternClass = index % 3 === 0 ? 'pattern-dots' : index % 3 === 1 ? 'pattern-lines' : 'pattern-grid';
---

<article class={`journal-tile flex-none w-80 h-full relative overflow-hidden border-r border-neutral-300 dark:border-neutral-600 ${patternClass}`}>
  <!-- Background Pattern Layer -->
  <div class="absolute inset-0 opacity-5 dark:opacity-10"></div>
  
  <!-- Content Container -->
  <div class="relative z-10 h-full flex flex-col justify-between p-8 lg:p-12">
    
    <!-- Header Section -->
    <header class="flex-none">
      <div class="flex items-start justify-between mb-8">
        <div class="flex-1">
          <time class="font-grotesk text-sm uppercase tracking-wide text-neutral-500 dark:text-neutral-400 block mb-2">
            {post.data.date.toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </time>
          <div class="flex items-center space-x-4 text-neutral-400 dark:text-neutral-500">
            <span class="font-grotesk text-xs uppercase tracking-wide">
              {readingTime} min read
            </span>
            {post.data.tags && (
              <span class="font-grotesk text-xs uppercase tracking-wide">
                #{post.data.tags[0]}
              </span>
            )}
          </div>
        </div>
        
        <!-- Tile Navigation -->
        <div class="flex items-center space-x-2">
          <span class="font-mono text-xs text-neutral-400 dark:text-neutral-500">
            {String(index + 1).padStart(2, '0')}
          </span>
        </div>
      </div>
    </header>

    <!-- Main Content Section -->
    <main class="flex-1 flex flex-col justify-center max-w-4xl">
      <h1 class="font-grotesk text-4xl lg:text-6xl xl:text-7xl font-bold leading-tight mb-6 text-brutalist">
        {post.data.title}
      </h1>
      
      {post.data.excerpt && (
        <p class="font-grotesk text-xl lg:text-2xl text-neutral-600 dark:text-neutral-400 leading-relaxed mb-8 max-w-3xl">
          {post.data.excerpt}
        </p>
      )}

      <!-- Call to Action -->
      <div class="flex flex-col sm:flex-row gap-4">
        <a href={`/journal/${post.slug}`} 
           class="inline-flex items-center font-grotesk text-sm uppercase tracking-wide px-6 py-3 bg-neutral-900 dark:bg-neutral-100 text-neutral-50 dark:text-neutral-900 hover:bg-neutral-700 dark:hover:bg-neutral-300 transition-colors border border-neutral-900 dark:border-neutral-100">
          Read Full Post
          <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
        
        <button onclick="sharePost(this)" 
                data-title={post.data.title}
                data-url={`${Astro.site}/journal/${post.slug}`}
                class="inline-flex items-center font-grotesk text-sm uppercase tracking-wide px-6 py-3 border border-neutral-600 dark:border-neutral-400 text-neutral-600 dark:text-neutral-400 hover:bg-neutral-600 hover:text-neutral-100 dark:hover:bg-neutral-400 dark:hover:text-neutral-900 transition-colors">
          Share
          <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
          </svg>
        </button>
      </div>
    </main>

    <!-- Footer Section -->
    <footer class="flex-none mt-8">
      {post.data.tags && (
        <div class="flex flex-wrap gap-2">
          {post.data.tags.slice(0, 3).map((tag: string) => (
            <span class="font-grotesk text-xs uppercase tracking-wide px-3 py-1 bg-neutral-200 dark:bg-neutral-700 text-neutral-600 dark:text-neutral-400 border border-neutral-300 dark:border-neutral-600">
              {tag}
            </span>
          ))}
        </div>
      )}
    </footer>
  </div>
</article>

<style>
  /* Subtle background patterns for visual variety */
  .pattern-dots::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(circle, currentColor 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
  }

  .pattern-lines::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(45deg, currentColor 1px, transparent 1px);
    background-size: 14px 14px;
  }

  .pattern-grid::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(currentColor 1px, transparent 1px),
      linear-gradient(90deg, currentColor 1px, transparent 1px);
    background-size: 30px 30px;
  }

  /* Editorial spacing and typography */
  .journal-tile {
    background: linear-gradient(135deg, 
      var(--bg-start, #fafafa) 0%, 
      var(--bg-end, #f5f5f5) 100%
    );
  }

  .dark .journal-tile {
    background: linear-gradient(135deg, 
      var(--bg-start, #171717) 0%, 
      var(--bg-end, #262626) 100%
    );
  }

  /* Responsive scaling for different screen sizes */
  @media (max-width: 768px) {
    .journal-tile h1 {
      font-size: 2.5rem;
      line-height: 1.1;
    }
    
    .journal-tile p {
      font-size: 1.125rem;
    }
  }
</style>

<script>
  // Share functionality
  function sharePost(button) {
    const title = button.dataset.title;
    const url = button.dataset.url;
    
    if (navigator.share) {
      navigator.share({
        title: title,
        url: url
      }).catch(console.error);
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(url).then(() => {
        button.textContent = 'Copied!';
        setTimeout(() => {
          button.innerHTML = `Share <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path></svg>`;
        }, 2000);
      });
    }
  }

  // Make sharePost globally available
  window.sharePost = sharePost;
</script>